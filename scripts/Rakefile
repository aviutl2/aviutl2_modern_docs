task default: %i[clean prepare download compare]

task :clean do
  rm_rf "tmp/aviutl2"
  rm_rf "tmp/aviutl2.zip"
  puts "Cleaned up temporary files."
end
task :prepare do
  mkdir_p "tmp"
  File.write("tmp/.gitignore", "*\n")
  puts "Prepared temporary directory."

  sh "bun install"
end

expected_files = %w[aviutl2.txt lua.txt].to_set

USER_AGENT =
  "Ruby/#{RUBY_VERSION} (#{RUBY_PLATFORM}) aviutl2_docs_mirror, https://github.com/sevenc-nanashi/aviutl2_docs_mirror"

task :download do
  require "open-uri"

  index_url = "https://spring-fragrance.mints.ne.jp/aviutl/oldver.php"
  puts "Fetching download page from #{index_url}"
  page_content = URI.open(index_url, "User-Agent" => USER_AGENT).read
  # <tr align=center><td><a href="aviutl2_sdk.zip">aviutl2_sdk.zip</a></td><td>version0.2_sdk</td></tr>
  app_match =
    page_content
      .to_enum(
        :scan,
        %r{<a href="(?<filename>aviutl2[^"]+\.zip)">(?<app_zip_name>aviutl2[^<]+\.zip)</a>}
      )
      .map { Regexp.last_match }
      .to_a
  versions =
    app_match
      .map { _1[:app_zip_name] }
      .reject { _1 == "aviutl2_sdk.zip" }
      .sort_by do |n|
        [
          n.split(/([0-9]+)/).map.with_index { |d, i| i % 2 == 0 ? d : d.to_i },
          n
        ]
      end

  latest_version = versions.last
  puts "Latest version detected: #{latest_version}"

  latest_filename = "./tmp/aviutl2.zip"
  latest_url = "https://spring-fragrance.mints.ne.jp/aviutl/#{latest_version}"
  URI.open(latest_url, "User-Agent" => USER_AGENT) do |f|
    IO.copy_stream(f, latest_filename)
  end
  sh "unzip -o #{latest_filename} -d tmp/aviutl2"
  puts "Unzipped app to tmp/aviutl2"
  File.write("./tmp/aviutl2_version.txt", latest_version)

  files = Dir.children("tmp/aviutl2").to_set

  unless files.superset?(expected_files)
    missing = expected_files - files
    raise "Missing expected files: #{missing.to_a.join(", ")}"
  end

  prev_version = versions[-2]
  puts "Previous version detected: #{prev_version}"
  prev_filename = "./tmp/aviutl2_prev.zip"
  prev_url = "https://spring-fragrance.mints.ne.jp/aviutl/#{prev_version}"
  URI.open(prev_url, "User-Agent" => USER_AGENT) do |f|
    IO.copy_stream(f, prev_filename)
  end
  sh "unzip -o #{prev_filename} -d tmp/aviutl2_prev"
  puts "Unzipped previous app to tmp/aviutl2_prev"
  File.write("./tmp/aviutl2_prev_version.txt", prev_version)
end

task :compare do
  current_version = File.read("./tmp/aviutl2_version.txt").strip
  prev_version = File.read("./tmp/aviutl2_prev_version.txt").strip

  puts "Comparing current version #{current_version} with previous version #{prev_version}"
  %w[aviutl2.txt lua.txt].each do |filename|
    current_file = File.join("tmp/aviutl2", filename)
    prev_file = File.join("tmp/aviutl2_prev", filename)

    unless File.exist?(current_file) && File.exist?(prev_file)
      puts "One of the files does not exist: #{current_file} or #{prev_file}"
      next
    end

    sh "diff -u #{prev_file} #{current_file} > tmp/#{filename}.diff" do |ok, res|
      if ok
        puts "No differences found in #{filename}."
        rm_f "tmp/#{filename}.diff"
      else
        puts "Differences found in #{filename}, see tmp/#{filename}.diff"
      end
    end
  end
  puts "Comparison complete. Diff files are in the tmp directory."
end

task :update do
  # 一瞬でレートリミットになるので一時的に無効化
  latest = File.read("./latest.txt").strip
  current = File.read("./tmp/aviutl2_version.txt").strip

  if latest == current
    puts "No new version detected. Current version: #{current}"
    next
  end

  puts "New version detected! Updating from #{latest} to #{current}"
  sh "./node_modules/.bin/gemini -yp 'Follow scripts/prompt.md' -m gemini-2.5-flash",
     chdir: "..",
     verbose: true
end
